spring.application.name=Embedded
application.version=@project.version@

#----------------
# Keycloack Login
#----------------


#--------
# Swagger
#--------
springdoc.api-docs.path=/api-docs
springdoc.swagger-ui-path=/swagger-ui.html
springdoc.api-docs.enabled=true
springdoc.api-docs.version=openapi-3-1
springdoc.swagger-ui.enabled=true

#-----------------------------------
# Configuracion Motor Base de Datos.
#-----------------------------------
spring.datasource.url=jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5432}/${DB_NAME:prueba}
spring.datasource.username=${DB_USER:prueba}
spring.datasource.password=${DB_PASS:prueba}
spring.datasource.driver-class-name=org.postgresql.Driver



# Comentado para evitar LazyInitializationException ya que MapStruct accede a propiedades LAZY después de que la sesión de Hibernate se ha cerrado.
#spring.jpa.open-in-view=false
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.show-sql=true
#spring.jpa.properties.hibernate.format_sql=true

#-------------------------
# Configuracionn Liquibase
#-------------------------
spring.liquibase.enabled=true
spring.liquibase.change-log=classpath:db/changelog/db.changelog-master.yaml
logging.level.liquibase=info
# Nos borra las tablas y ejecuta la creación y los inserts
spring.liquibase.drop-first=true

# ------------------------------------
# Configuracion de la base de datos H2
# ------------------------------------
#spring.datasource.url=jdbc:h2:mem:testdb
#spring.datasource.driverClassName=org.h2.Driver
#spring.datasource.driver-class-name=org.h2.Driver

# Habilitar la consola web de H2 para visualizar la base de datos en el navegador
#spring.h2.console.enabled=true
#spring.h2.console.path=/h2-console

# ---------------
# Log por consola.
#----------------
logging.level.org.hibernate.SQL=INFO
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
logging.level.org.springframework.security=INFO
logging.level.org.springframework.web=INFO
logging.level.org.springframework.boot.autoconfigure.security=INFO

# -------------------------------
# Variables aplicacion requeridas
# -------------------------------
server.port=8080
hostname.fe=${HOSTNAME_FE:http://localhost:4200}
oidc.required.scope=${REQUIRED_SCOPES:openid}
oidc.client.id=${OIDC_CLIENTID:prueba}
local.execution=${LOCAL_EXECUTION:true}

